
Fatbin elf code:
================
arch = sm_80
code version = [1,7]
producer = <unknown>
host = linux
compile_size = 64bit

Fatbin ptx code:
================
arch = sm_80
code version = [7,1]
producer = <unknown>
host = linux
compile_size = 64bit
compressed








.version 7.1
.target sm_80
.address_size 64



.visible .entry _Z12PowerKernal1PjS_ii(
.param .u64 _Z12PowerKernal1PjS_ii_param_0,
.param .u64 _Z12PowerKernal1PjS_ii_param_1,
.param .u32 _Z12PowerKernal1PjS_ii_param_2,
.param .u32 _Z12PowerKernal1PjS_ii_param_3
)
{
.reg .pred %p<10>;
.reg .b32 %r<77>;
.reg .b64 %rd<16>;


ld.param.u64 %rd1, [_Z12PowerKernal1PjS_ii_param_0];
ld.param.u64 %rd2, [_Z12PowerKernal1PjS_ii_param_1];
ld.param.u32 %r31, [_Z12PowerKernal1PjS_ii_param_2];
ld.param.u32 %r30, [_Z12PowerKernal1PjS_ii_param_3];
mov.u32 %r32, %ntid.x;
mov.u32 %r33, %ctaid.x;
mov.u32 %r34, %tid.x;
mad.lo.s32 %r1, %r33, %r32, %r34;
setp.ge.s32	%p1, %r1, %r31;
setp.eq.s32	%p2, %r30, 0;
or.pred %p3, %p1, %p2;
@%p3 bra BB0_14;

cvta.to.global.u64 %rd3, %rd1;
mul.wide.s32 %rd4, %r1, 4;
add.s64 %rd5, %rd3, %rd4;
shr.s32 %r37, %r30, 31;
shr.u32 %r38, %r37, 30;
add.s32 %r39, %r30, %r38;
shr.s32 %r2, %r39, 2;
ld.global.u32 %r62, [%rd5];
mov.u32 %r36, 0;
mov.u32 %r63, %r36;
mov.u32 %r6, %r36;

BB0_2:
cvta.to.global.u64 %rd6, %rd2;
add.s64 %rd8, %rd6, %rd4;
mul.lo.s32 %r50, %r62, %r1;
ld.global.u32 %r51, [%rd8];
mul.lo.s32 %r7, %r50, %r51;
st.global.u32 [%rd5], %r7;
add.s32 %r52, %r2, 1;
mov.u32 %r68, 1;
and.b32 %r45, %r52, 3;
setp.eq.s32	%p4, %r45, 0;
@%p4 bra BB0_3;

setp.eq.s32	%p5, %r45, 1;
@%p5 bra BB0_5;
bra.uni BB0_6;

BB0_5:
mov.u32 %r68, %r36;
bra.uni BB0_9;

BB0_3:
mov.u32 %r69, %r6;
mov.u32 %r70, %r36;
mov.u32 %r75, %r36;
mov.u32 %r6, %r36;
bra.uni BB0_10;

BB0_6:
setp.eq.s32	%p6, %r45, 2;
@%p6 bra BB0_8;

mul.lo.s32 %r6, %r7, %r6;
mov.u32 %r68, 2;

BB0_8:
mul.lo.s32 %r6, %r7, %r6;

BB0_9:
mul.lo.s32 %r69, %r7, %r6;
add.s32 %r70, %r68, 1;
mov.u32 %r75, %r69;

BB0_10:
setp.lt.u32	%p7, %r52, 4;
@%p7 bra BB0_13;

add.s32 %r73, %r70, -1;
mov.u32 %r75, %r69;

BB0_12:
mul.lo.s32 %r55, %r7, %r75;
mul.lo.s32 %r56, %r7, %r55;
mul.lo.s32 %r6, %r7, %r56;
mul.lo.s32 %r75, %r7, %r6;
add.s32 %r73, %r73, 4;
setp.lt.u32	%p8, %r73, %r2;
@%p8 bra BB0_12;

BB0_13:
ld.global.u32 %r61, [%rd8];
mul.lo.s32 %r62, %r61, %r75;
st.global.u32 [%rd5], %r62;
add.s32 %r63, %r63, 1;
setp.lt.u32	%p9, %r63, %r30;
@%p9 bra BB0_2;

BB0_14:
ret;
}


.visible .entry _Z16PowerKernalEmptyPji(
.param .u64 _Z16PowerKernalEmptyPji_param_0,
.param .u32 _Z16PowerKernalEmptyPji_param_1
)
{
.reg .b32 %r<5>;
.reg .b64 %rd<5>;


ld.param.u64 %rd1, [_Z16PowerKernalEmptyPji_param_0];
mov.u32 %r2, %ntid.x;
mov.u32 %r3, %ctaid.x;
mov.u32 %r4, %tid.x;
mad.lo.s32 %r1, %r3, %r2, %r4;
bar.sync 0;
cvta.to.global.u64 %rd2, %rd1;
mul.wide.u32 %rd3, %r1, 4;
add.s64 %rd4, %rd2, %rd3;
st.global.u32 [%rd4], %r1;
bar.sync 0;
ret;
}


