
Fatbin elf code:
================
arch = sm_80
code version = [1,7]
producer = <unknown>
host = linux
compile_size = 64bit

Fatbin ptx code:
================
arch = sm_80
code version = [7,1]
producer = <unknown>
host = linux
compile_size = 64bit
compressed








.version 7.1
.target sm_80
.address_size 64



.visible .entry _Z16power_microbenchIjEvPT_S1_S1_im(
.param .u64 _Z16power_microbenchIjEvPT_S1_S1_im_param_0,
.param .u64 _Z16power_microbenchIjEvPT_S1_S1_im_param_1,
.param .u64 _Z16power_microbenchIjEvPT_S1_S1_im_param_2,
.param .u32 _Z16power_microbenchIjEvPT_S1_S1_im_param_3,
.param .u64 _Z16power_microbenchIjEvPT_S1_S1_im_param_4
)
{
.reg .pred %p<7>;
.reg .b32 %r<653>;
.reg .b64 %rd<36>;


ld.param.u64 %rd11, [_Z16power_microbenchIjEvPT_S1_S1_im_param_0];
ld.param.u64 %rd12, [_Z16power_microbenchIjEvPT_S1_S1_im_param_1];
ld.param.u32 %r21, [_Z16power_microbenchIjEvPT_S1_S1_im_param_3];
ld.param.u64 %rd10, [_Z16power_microbenchIjEvPT_S1_S1_im_param_4];
mov.u32 %r22, %ntid.x;
mov.u32 %r23, %ctaid.x;
mov.u32 %r24, %tid.x;
mad.lo.s32 %r1, %r22, %r23, %r24;
cvta.to.global.u64 %rd13, %rd11;
mul.wide.s32 %rd14, %r1, 4;
add.s64 %rd15, %rd13, %rd14;
ld.global.u32 %r645, [%rd15];
cvta.to.global.u64 %rd16, %rd12;
add.s64 %rd17, %rd16, %rd14;
ld.global.u32 %r644, [%rd17];

	bar.sync 0;

	shr.s32 %r25, %r1, 31;
shr.u32 %r26, %r25, 27;
add.s32 %r27, %r1, %r26;
and.b32 %r28, %r27, -32;
sub.s32 %r29, %r1, %r28;
mov.u32 %r643, 0;
setp.ge.s32	%p1, %r29, %r21;
@%p1 bra BB0_8;

setp.eq.s64	%p2, %rd10, 0;
@%p2 bra BB0_8;

mul.hi.s64 %rd20, %rd10, -6640827866535438581;
add.s64 %rd21, %rd20, %rd10;
shr.u64 %rd22, %rd21, 63;
shr.s64 %rd23, %rd21, 6;
add.s64 %rd24, %rd23, %rd22;
mul.lo.s64 %rd34, %rd24, 100;
mov.u32 %r643, 0;
mov.u64 %rd33, 0;
setp.lt.s64	%p3, %rd34, 1;
@%p3 bra BB0_3;

BB0_4:
.pragma "nounroll";

	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	
	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	add.s64 %rd33, %rd33, 100;
setp.ne.s64	%p4, %rd33, %rd34;
@%p4 bra BB0_4;

ld.param.u64 %rd32, [_Z16power_microbenchIjEvPT_S1_S1_im_param_4];
sub.s64 %rd31, %rd32, %rd34;
setp.eq.s64	%p5, %rd31, 0;
@%p5 bra BB0_8;
bra.uni BB0_6;

BB0_3:
mov.u64 %rd34, %rd33;

BB0_6:
ld.param.u64 %rd28, [_Z16power_microbenchIjEvPT_S1_S1_im_param_4];
sub.s64 %rd35, %rd28, %rd34;

BB0_7:
.pragma "nounroll";

	{	
add.u32 %r643, %r644, %r643;
add.u32 %r643, %r645, %r643;
mad.lo.u32 %r644, %r644, %r644 , %r643;
}

	add.s64 %rd35, %rd35, -1;
setp.ne.s64	%p6, %rd35, 0;
@%p6 bra BB0_7;

BB0_8:
mov.u32 %r642, %tid.x;
mov.u32 %r641, %ctaid.x;
mov.u32 %r640, %ntid.x;
mad.lo.s32 %r639, %r640, %r641, %r642;
mul.wide.s32 %rd30, %r639, 4;
ld.param.u64 %rd29, [_Z16power_microbenchIjEvPT_S1_S1_im_param_2];
cvta.to.global.u64 %rd25, %rd29;

	bar.sync 0;

	add.s64 %rd27, %rd25, %rd30;
st.global.u32 [%rd27], %r643;
ret;
}


