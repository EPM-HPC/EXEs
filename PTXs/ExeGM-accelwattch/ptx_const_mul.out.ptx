
Fatbin elf code:
================
arch = sm_80
code version = [1,7]
producer = <unknown>
host = linux
compile_size = 64bit

Fatbin ptx code:
================
arch = sm_80
code version = [7,1]
producer = <unknown>
host = linux
compile_size = 64bit
compressed








.version 7.1
.target sm_80
.address_size 64


.const .align 4 .b8 ConstArray1[1024];
.const .align 4 .b8 ConstArray2[1024];
.const .align 4 .b8 ConstArray3[1024];

.visible .entry _Z11PowerKernalPfi(
.param .u64 _Z11PowerKernalPfi_param_0,
.param .u32 _Z11PowerKernalPfi_param_1
)
{
.reg .pred %p<7>;
.reg .f32 %f<58>;
.reg .b32 %r<46>;
.reg .b64 %rd<68>;


ld.param.u64 %rd2, [_Z11PowerKernalPfi_param_0];
ld.param.u32 %r12, [_Z11PowerKernalPfi_param_1];
cvta.to.global.u64 %rd1, %rd2;
mov.u32 %r13, %ctaid.x;
mov.u32 %r14, %ntid.x;
mov.u32 %r15, %tid.x;
mad.lo.s32 %r1, %r13, %r14, %r15;
mov.u32 %r16, 1065353216;
st.global.u32 [%rd1], %r16;
setp.eq.s32	%p1, %r12, 0;
@%p1 bra BB0_11;

and.b32 %r20, %r12, 3;
mov.u32 %r41, 0;
mov.f32 %f52, 0f3F800000;
mov.f32 %f57, 0f00000000;
setp.eq.s32	%p2, %r20, 0;
@%p2 bra BB0_7;

setp.eq.s32	%p3, %r20, 1;
@%p3 bra BB0_6;

setp.eq.s32	%p4, %r20, 2;
@%p4 bra BB0_5;

and.b32 %r22, %r1, 255;
mul.wide.u32 %rd3, %r22, 4;
mov.u64 %rd4, ConstArray1;
add.s64 %rd5, %rd4, %rd3;
add.s32 %r23, %r1, 1;
mov.u32 %r41, 1;
mul.wide.u32 %rd6, %r23, 4;
and.b64 %rd7, %rd6, 1020;
mov.u64 %rd8, ConstArray2;
add.s64 %rd9, %rd8, %rd7;
add.s32 %r24, %r1, 5;
mul.wide.u32 %rd10, %r24, 4;
and.b64 %rd11, %rd10, 1020;
mov.u64 %rd12, ConstArray3;
add.s64 %rd13, %rd12, %rd11;
ld.const.f32 %f15, [%rd9];
ld.const.f32 %f16, [%rd5];
mul.f32 %f17, %f16, %f15;
ld.const.f32 %f18, [%rd13];
mul.f32 %f52, %f18, %f17;

BB0_5:
add.s32 %r25, %r1, %r41;
and.b32 %r26, %r25, 255;
mul.wide.u32 %rd14, %r26, 4;
mov.u64 %rd15, ConstArray1;
add.s64 %rd16, %rd15, %rd14;
add.s32 %r27, %r25, 1;
mul.wide.u32 %rd17, %r27, 4;
and.b64 %rd18, %rd17, 1020;
mov.u64 %rd19, ConstArray2;
add.s64 %rd20, %rd19, %rd18;
add.s32 %r28, %r25, 5;
mul.wide.u32 %rd21, %r28, 4;
and.b64 %rd22, %rd21, 1020;
mov.u64 %rd23, ConstArray3;
add.s64 %rd24, %rd23, %rd22;
ld.const.f32 %f19, [%rd20];
ld.const.f32 %f20, [%rd16];
mul.f32 %f21, %f20, %f19;
ld.const.f32 %f22, [%rd24];
mul.f32 %f23, %f22, %f21;
mul.f32 %f52, %f52, %f23;
add.s32 %r41, %r41, 1;

BB0_6:
add.s32 %r29, %r1, %r41;
and.b32 %r30, %r29, 255;
mul.wide.u32 %rd25, %r30, 4;
mov.u64 %rd26, ConstArray1;
add.s64 %rd27, %rd26, %rd25;
add.s32 %r31, %r29, 1;
mul.wide.u32 %rd28, %r31, 4;
and.b64 %rd29, %rd28, 1020;
mov.u64 %rd30, ConstArray2;
add.s64 %rd31, %rd30, %rd29;
add.s32 %r32, %r29, 5;
mul.wide.u32 %rd32, %r32, 4;
and.b64 %rd33, %rd32, 1020;
mov.u64 %rd34, ConstArray3;
add.s64 %rd35, %rd34, %rd33;
ld.const.f32 %f24, [%rd31];
ld.const.f32 %f25, [%rd27];
mul.f32 %f26, %f25, %f24;
ld.const.f32 %f27, [%rd35];
mul.f32 %f28, %f27, %f26;
mul.f32 %f52, %f52, %f28;
add.s32 %r41, %r41, 1;
mov.f32 %f57, %f52;

BB0_7:
setp.lt.u32	%p5, %r12, 4;
@%p5 bra BB0_10;

add.s32 %r44, %r1, %r41;
mov.f32 %f57, %f52;

BB0_9:
and.b32 %r33, %r44, 255;
mul.wide.u32 %rd36, %r33, 4;
mov.u64 %rd37, ConstArray1;
add.s64 %rd38, %rd37, %rd36;
add.s32 %r34, %r44, 1;
mul.wide.u32 %rd39, %r34, 4;
and.b64 %rd40, %rd39, 1020;
mov.u64 %rd41, ConstArray2;
add.s64 %rd42, %rd41, %rd40;
add.s32 %r35, %r44, 5;
mul.wide.u32 %rd43, %r35, 4;
and.b64 %rd44, %rd43, 1020;
mov.u64 %rd45, ConstArray3;
add.s64 %rd46, %rd45, %rd44;
ld.const.f32 %f29, [%rd42];
ld.const.f32 %f30, [%rd38];
mul.f32 %f31, %f30, %f29;
ld.const.f32 %f32, [%rd46];
mul.f32 %f33, %f32, %f31;
mul.f32 %f34, %f57, %f33;
add.s64 %rd47, %rd37, %rd40;
add.s32 %r36, %r44, 2;
mul.wide.u32 %rd48, %r36, 4;
and.b64 %rd49, %rd48, 1020;
add.s64 %rd50, %rd41, %rd49;
add.s32 %r37, %r44, 6;
mul.wide.u32 %rd51, %r37, 4;
and.b64 %rd52, %rd51, 1020;
add.s64 %rd53, %rd45, %rd52;
ld.const.f32 %f35, [%rd50];
ld.const.f32 %f36, [%rd47];
mul.f32 %f37, %f36, %f35;
ld.const.f32 %f38, [%rd53];
mul.f32 %f39, %f38, %f37;
mul.f32 %f40, %f34, %f39;
add.s64 %rd54, %rd37, %rd49;
add.s32 %r38, %r44, 3;
mul.wide.u32 %rd55, %r38, 4;
and.b64 %rd56, %rd55, 1020;
add.s64 %rd57, %rd41, %rd56;
add.s32 %r39, %r44, 7;
mul.wide.u32 %rd58, %r39, 4;
and.b64 %rd59, %rd58, 1020;
add.s64 %rd60, %rd45, %rd59;
ld.const.f32 %f41, [%rd57];
ld.const.f32 %f42, [%rd54];
mul.f32 %f43, %f42, %f41;
ld.const.f32 %f44, [%rd60];
mul.f32 %f45, %f44, %f43;
mul.f32 %f46, %f40, %f45;
add.s64 %rd61, %rd37, %rd56;
add.s32 %r10, %r44, 4;
mul.wide.u32 %rd62, %r10, 4;
and.b64 %rd63, %rd62, 1020;
add.s64 %rd64, %rd41, %rd63;
add.s32 %r40, %r44, 8;
mul.wide.u32 %rd65, %r40, 4;
and.b64 %rd66, %rd65, 1020;
add.s64 %rd67, %rd45, %rd66;
ld.const.f32 %f47, [%rd64];
ld.const.f32 %f48, [%rd61];
mul.f32 %f49, %f48, %f47;
ld.const.f32 %f50, [%rd67];
mul.f32 %f51, %f50, %f49;
mul.f32 %f57, %f46, %f51;
add.s32 %r41, %r41, 4;
setp.lt.u32	%p6, %r41, %r12;
mov.u32 %r44, %r10;
@%p6 bra BB0_9;

BB0_10:
st.global.f32 [%rd1], %f57;

BB0_11:
bar.sync 0;
ret;
}


