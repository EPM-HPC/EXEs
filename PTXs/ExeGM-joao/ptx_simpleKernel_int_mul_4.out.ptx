
Fatbin elf code:
================
arch = sm_80
code version = [1,7]
producer = <unknown>
host = linux
compile_size = 64bit

Fatbin elf code:
================
arch = sm_80
code version = [1,7]
producer = <unknown>
host = linux
compile_size = 64bit

Fatbin ptx code:
================
arch = sm_80
code version = [7,1]
producer = <unknown>
host = linux
compile_size = 64bit
compressed
ptxasOptions = -O0  








.version 7.1
.target sm_80
.address_size 64



.visible .entry _Z12simpleKernelIiEvPT_S1_S1_S1_S1_(
.param .u64 _Z12simpleKernelIiEvPT_S1_S1_S1_S1__param_0,
.param .u64 _Z12simpleKernelIiEvPT_S1_S1_S1_S1__param_1,
.param .u64 _Z12simpleKernelIiEvPT_S1_S1_S1_S1__param_2,
.param .u64 _Z12simpleKernelIiEvPT_S1_S1_S1_S1__param_3,
.param .u64 _Z12simpleKernelIiEvPT_S1_S1_S1_S1__param_4
)
{
.reg .pred %p<2>;
.reg .b32 %r<22>;
.reg .b64 %rd<19>;


ld.param.u64 %rd1, [_Z12simpleKernelIiEvPT_S1_S1_S1_S1__param_0];
ld.param.u64 %rd2, [_Z12simpleKernelIiEvPT_S1_S1_S1_S1__param_1];
ld.param.u64 %rd3, [_Z12simpleKernelIiEvPT_S1_S1_S1_S1__param_2];
ld.param.u64 %rd4, [_Z12simpleKernelIiEvPT_S1_S1_S1_S1__param_3];
ld.param.u64 %rd5, [_Z12simpleKernelIiEvPT_S1_S1_S1_S1__param_4];
mov.u32 %r2, %ctaid.x;
shl.b32 %r3, %r2, 10;
mov.u32 %r4, %tid.x;
add.s32 %r1, %r3, %r4;
setp.gt.s32	%p1, %r1, 59999999;
@%p1 bra BB0_2;

cvta.to.global.u64 %rd6, %rd1;
cvta.to.global.u64 %rd7, %rd2;
mul.wide.s32 %rd8, %r1, 4;
add.s64 %rd9, %rd6, %rd8;
mov.u32 %r5, 60000000;
sub.s32 %r6, %r5, %r1;
mul.wide.s32 %rd10, %r6, 4;
add.s64 %rd11, %rd6, %rd10;
ld.global.u32 %r7, [%rd11];
ld.global.u32 %r8, [%rd9];
mul.lo.s32 %r9, %r7, %r8;
mul.lo.s32 %r10, %r7, %r9;
mul.lo.s32 %r11, %r9, %r9;
mul.lo.s32 %r12, %r10, %r9;
mul.lo.s32 %r13, %r10, %r11;
mul.lo.s32 %r14, %r11, %r11;
mul.lo.s32 %r15, %r12, %r11;
mul.lo.s32 %r16, %r13, %r12;
mul.lo.s32 %r17, %r13, %r14;
mul.lo.s32 %r18, %r15, %r14;
mul.lo.s32 %r19, %r16, %r15;
mul.lo.s32 %r20, %r17, %r16;
mul.lo.s32 %r21, %r17, %r18;
add.s64 %rd12, %rd7, %rd8;
st.global.u32 [%rd12], %r18;
cvta.to.global.u64 %rd13, %rd3;
add.s64 %rd14, %rd13, %rd8;
st.global.u32 [%rd14], %r19;
cvta.to.global.u64 %rd15, %rd4;
add.s64 %rd16, %rd15, %rd8;
st.global.u32 [%rd16], %r20;
cvta.to.global.u64 %rd17, %rd5;
add.s64 %rd18, %rd17, %rd8;
st.global.u32 [%rd18], %r21;

BB0_2:
ret;
}


